// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/go-sigma/sigma/pkg/dal/dao (interfaces: AuthRuleService)
//
// Generated by this command:
//
//	mockgen -destination=mocks/authrule.go -package=mocks github.com/go-sigma/sigma/pkg/dal/dao AuthRuleService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/go-sigma/sigma/pkg/dal/models"
	gomock "go.uber.org/mock/gomock"
)

// MockAuthRuleService is a mock of AuthRuleService interface.
type MockAuthRuleService struct {
	ctrl     *gomock.Controller
	recorder *MockAuthRuleServiceMockRecorder
}

// MockAuthRuleServiceMockRecorder is the mock recorder for MockAuthRuleService.
type MockAuthRuleServiceMockRecorder struct {
	mock *MockAuthRuleService
}

// NewMockAuthRuleService creates a new mock instance.
func NewMockAuthRuleService(ctrl *gomock.Controller) *MockAuthRuleService {
	mock := &MockAuthRuleService{ctrl: ctrl}
	mock.recorder = &MockAuthRuleServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthRuleService) EXPECT() *MockAuthRuleServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockAuthRuleService) Create(arg0 context.Context, arg1 *models.AuthRule) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockAuthRuleServiceMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAuthRuleService)(nil).Create), arg0, arg1)
}
