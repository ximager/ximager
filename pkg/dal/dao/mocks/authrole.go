// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/go-sigma/sigma/pkg/dal/dao (interfaces: AuthRoleService)
//
// Generated by this command:
//
//	mockgen -destination=mocks/authrole.go -package=mocks github.com/go-sigma/sigma/pkg/dal/dao AuthRoleService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/go-sigma/sigma/pkg/dal/models"
	gomock "go.uber.org/mock/gomock"
)

// MockAuthRoleService is a mock of AuthRoleService interface.
type MockAuthRoleService struct {
	ctrl     *gomock.Controller
	recorder *MockAuthRoleServiceMockRecorder
}

// MockAuthRoleServiceMockRecorder is the mock recorder for MockAuthRoleService.
type MockAuthRoleServiceMockRecorder struct {
	mock *MockAuthRoleService
}

// NewMockAuthRoleService creates a new mock instance.
func NewMockAuthRoleService(ctrl *gomock.Controller) *MockAuthRoleService {
	mock := &MockAuthRoleService{ctrl: ctrl}
	mock.recorder = &MockAuthRoleServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthRoleService) EXPECT() *MockAuthRoleServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockAuthRoleService) Create(arg0 context.Context, arg1 *models.AuthRole) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockAuthRoleServiceMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAuthRoleService)(nil).Create), arg0, arg1)
}
